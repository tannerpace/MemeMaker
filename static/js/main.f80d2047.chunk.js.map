{"version":3,"sources":["Header.jsx","RandomNumber.js","MemeGenerator.js","Animations.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","Box","className","Typography","RandomNumber","max","Math","floor","random","MemeGenerator","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","handleSubmit","fetch","then","response","json","memes","data","setState","event","target","name","value","this","preventDefault","myImg","url","onSubmit","TextField","type","placeholder","onChange","Button","variant","src","alt","Component","Animations","props","Skeleton","animation","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","StyledEngineProvider","injectFirst","document","getElementById"],"mappings":"yMAgBeA,MAbf,WACI,OAEI,eAACC,EAAA,EAAD,CAAKC,UAAU,SAAf,UAEI,cAACC,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,2H,+CCFIC,EALK,SAACC,GAClB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,I,kBCiEvBI,E,kDAhEX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,QAAS,GACTC,WAAY,GACZC,UAAW,gCACXC,YAAa,IAEjB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATV,E,qDAYd,WAAqB,IAAD,OAChBE,MAAM,qCACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAa,IACPE,EAAUF,EAASG,KAAnBD,MACR,EAAKE,SAAS,CAAEV,YAAaQ,S,0BAIzC,SAAaG,GAAQ,IAAD,EACQA,EAAMC,OAAtBC,EADQ,EACRA,KAAMC,EADE,EACFA,MACdC,KAAKL,SAAL,eAAiBG,EAAOC,M,0BAG5B,SAAaH,GACTA,EAAMK,iBACN,IAAMC,EAAQ,CAAEC,IAAKH,KAAKnB,MAAMI,YAAYV,EAAa,MAAM4B,KAE/DH,KAAKL,SAAS,CAAEX,UAAWkB,EAAMC,Q,oBAGrC,WACI,OACI,sBAAK9B,UAAU,cAAf,UACI,uBAAMA,UAAU,YAAY+B,SAAUJ,KAAKZ,aAA3C,UACI,cAACiB,EAAA,EAAD,CACIC,KAAK,OACLR,KAAK,UACLS,YAAY,WACZR,MAAOC,KAAKnB,MAAMC,QAClB0B,SAAUR,KAAKd,eAEnB,cAACmB,EAAA,EAAD,CACIC,KAAK,OACLR,KAAK,aACLS,YAAY,cACZR,MAAOC,KAAKnB,MAAME,WAClByB,SAAUR,KAAKd,eAGnB,cAACuB,EAAA,EAAD,CAAQC,QAAQ,YAAYJ,KAAK,SAAjC,oBAEJ,sBAAKjC,UAAU,OAAf,UACI,qBAAKsC,IAAKX,KAAKnB,MAAMG,UAAW4B,IAAI,KACpC,oBAAIvC,UAAU,MAAd,SAAqB2B,KAAKnB,MAAMC,UAChC,oBAAIT,UAAU,SAAd,SAAwB2B,KAAKnB,MAAME,uB,GA1D3B8B,a,SCEb,SAASC,EAAWC,GAC/B,OACI,eAAC3C,EAAA,EAAD,WACI,cAAC4C,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,CAAUC,UAAU,SACpB,cAACD,EAAA,EAAD,CAAUC,WAAW,IACrB,cAAC,EAAD,OCGGC,MATf,WACE,OACE,gCACE,cAACJ,EAAD,IACA,cAAC,EAAD,QCGSK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAsBC,aAAW,EAAjC,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.f80d2047.chunk.js","sourcesContent":["import React from \"react\"\nimport { AppBar, Typography } from '@mui/material';\nimport { Box } from '@mui/material';\nfunction Header() {\n    return (\n\n        <Box className=\"header\"\n        >\n            <Typography></Typography>\n            <Typography>üòèüò≥üíÅTanners Totally Free Meme Maker üëÄüòÑüòá</Typography>\n\n\n        </Box>\n    )\n}\n\nexport default Header","import React from \"react\"\n   \nconst RandomNumber = (max) =>{\n    return Math.floor(Math.random() * max);\n}\n\n\nexport default  RandomNumber","import React, { Component } from \"react\"\nimport RandomNumber from \"./RandomNumber\"\nimport { Button, Box, TextField, Input, IconButton } from '@mui/material';\nclass MemeGenerator extends Component {\n    constructor() {\n        super()\n        this.state = {\n            topText: \"\",\n            bottomText: \"\",\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs: []\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    componentDidMount() {\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(response => {\n                const { memes } = response.data\n                this.setState({ allMemeImgs: memes })\n            })\n    }\n\n    handleChange(event) {\n        const { name, value } = event.target\n        this.setState({ [name]: value })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        const myImg = { url: this.state.allMemeImgs[RandomNumber(100)].url }\n\n        this.setState({ randomImg: myImg.url })\n    }\n\n    render() {\n        return (\n            <div className=\"memeWrapper\">\n                <form className=\"meme-form\" onSubmit={this.handleSubmit}>\n                    <TextField\n                        type=\"text\"\n                        name=\"topText\"\n                        placeholder=\"Top Text\"\n                        value={this.state.topText}\n                        onChange={this.handleChange}\n                    />\n                    <TextField\n                        type=\"text\"\n                        name=\"bottomText\"\n                        placeholder=\"Bottom Text\"\n                        value={this.state.bottomText}\n                        onChange={this.handleChange}\n                    />\n\n                    <Button variant=\"contained\" type=\"submit\">NEW</Button>\n                </form>\n                <div className=\"meme\">\n                    <img src={this.state.randomImg} alt=\"\" />\n                    <h2 className=\"top\">{this.state.topText}</h2>\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MemeGenerator","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Skeleton from '@mui/material/Skeleton';\nimport Header from './Header';\nimport MemeGenerator from './MemeGenerator';\nexport default function Animations(props) {\n    return (\n        <Box>\n            <Skeleton />\n            <Skeleton animation=\"wave\" />\n            <Skeleton animation={false} />\n            <Header />\n\n        </Box>\n    );\n}","import React from \"react\"\nimport Header from \"./Header\"\nimport MemeGenerator from \"./MemeGenerator\"\nimport Animations from './Animations'\n\nfunction App() {\n  return (\n    <div>\n      <Animations />\n      <MemeGenerator />\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StyledEngineProvider } from '@mui/material/styles';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StyledEngineProvider injectFirst>\n      <App />\n    </StyledEngineProvider >\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}